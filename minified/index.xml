<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mario Carrion</title><link>https://www.mariocarrion.com/</link><description>Recent content on Mario Carrion</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 23 Jul 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.mariocarrion.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Dell DW15 meets Macbook Pro</title><link>https://www.mariocarrion.com/2018/07/23/dell-dw15-macbook-pro.html</link><pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/07/23/dell-dw15-macbook-pro.html</guid><description>Last year I was upgraded to a new Macbook Pro, after using a Macbook Air for the last 3 years, I was a bit worried in the beginning because I did not want to be forced to use the Touch Bar on a daily basis, luckily enough I was assigned the 13&amp;rdquo; version, so no gimmicky Touch Bar for me. What a relief!
This new Macbook Pro comes with two USB-C ports which not surprisingly represent carrying new adapters with you all the time, those adapters are for external output, USB 2.</description></item><item><title>Go Tip: Azure Active Directory &#43; JWT</title><link>https://www.mariocarrion.com/2018/07/16/azure-active-directory-jwt.html</link><pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/07/16/azure-active-directory-jwt.html</guid><description>Let&amp;rsquo;s cover how to use Azure Active Directory (for authentication) and JSON Web Tokens (for authorizing) your enterprise users in Go!
By the way this is not your classic How to use Go with JWT (search golang jwt on Google, or any other search engine for that) this is more focused on using specifically the actual Azure Active Directory service for getting the JSON Web Token and then using that to authorize your API.</description></item><item><title>Finished Reading: The 80/20 Principle</title><link>https://www.mariocarrion.com/2018/07/01/the-80-20-principle.html</link><pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/07/01/the-80-20-principle.html</guid><description>Although I was expecting a bit &amp;quot;more&amp;quot; from &amp;quot;The 80/20 Principle&amp;quot;, I still can see the practical use of this principle. pic.twitter.com/y9nQuMfm1Q
&amp;mdash; Mario Carrion (@mariocarrion) June 26, 2018 I&amp;rsquo;ve been curious about this principle and book since I heard about it for the first time. I wasn&amp;rsquo;t expected the, mostly, financial content of the book which makes sense after you complete it, but it does drag a bit in the beginning.</description></item><item><title>I&#39;m ready for July 2018</title><link>https://www.mariocarrion.com/2018/06/27/im-ready-for-july-2018.html</link><pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/06/27/im-ready-for-july-2018.html</guid><description>I just realized that __14 years and 2 days ago__ I published my first ever blog. My last college year and I was planning to write a Blogger-like system (hah!). Time really flies. pic.twitter.com/y9NGk5DlgH
&amp;mdash; Mario Carrion (@mariocarrion) June 28, 2018 It is really crazy that today, 14 years and 2 days ago, I started blogging. My first post describes the naive idea of rewriting Blogger.
The &amp;ldquo;funny&amp;rdquo; thing is that a month later I would be completing an ActiveView-like library, written in PHP4 using the newly introduced support for classes, called HTML2PHP.</description></item><item><title>Go Tip: Code Coverage</title><link>https://www.mariocarrion.com/2018/06/20/code-coverage-in-go.html</link><pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/06/20/code-coverage-in-go.html</guid><description>Code coverage in Go is included in the toolchain and it is as simple as appending -coverprofile to the usual go test command, kind of like using:
go test -coverprofile=cover.out &amp;lt;package-name&amp;gt; Assuming all tests pass, then you should get an output similar to:
ok &amp;lt;package-name&amp;gt; 0.046s coverage: &amp;lt;XY.Z&amp;gt;% of statements Where XY.Z is the actual code coverage percentage. Notice that the coverprofile file, cover.out, can be used for generating a more human friendly output, like HTML, with:</description></item><item><title>Finished Reading: Talk like TED</title><link>https://www.mariocarrion.com/2018/05/25/talk-like-ted.html</link><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/05/25/talk-like-ted.html</guid><description>Just finished reading &amp;quot;Talk like TED&amp;quot;. Fascinating and inspiring book. pic.twitter.com/xf2NLS8kER
&amp;mdash; Mario Carrion (@mariocarrion) May 25, 2018 Talk like TED: The 9-Public Speaking Secrets of the World&amp;rsquo;s Top Minds is a book written by Carmine Gallo and published by St. Martin&amp;rsquo;s Press in 2014.
This paragraph is fascinating. Taken from ‚ÄúTalk like TED‚Äù pic.twitter.com/ttGEH9WgOy
&amp;mdash; Mario Carrion (@mariocarrion) May 17, 2018 Talk like TED provides 9 secrets, or tips, TED speakers have used over the years to properly deliver their message while keeping the audience engaged.</description></item><item><title>Finished Reading: Software Design X-Rays</title><link>https://www.mariocarrion.com/2018/05/11/software-design-x-rays.html</link><pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/05/11/software-design-x-rays.html</guid><description>Just finished reading &amp;quot;Software Design X-Rays&amp;quot;. Really interesting book. pic.twitter.com/qzXlVRmmDw
&amp;mdash; Mario Carrion (@mariocarrion) May 11, 2018 Software Design X-Rays is a book written by Adam Tornhill and published by The Pragmatic Programmers in 2018.
I was interested in reading this book since I saw the Beta version a few months back, gladly my interest was rewarded and it did not disappoint. It left me with a new way of looking at Software Development and showed me a measurable way to look at bottleneck code and hot spots.</description></item><item><title>Finished Reading: Architectural Patterns</title><link>https://www.mariocarrion.com/2018/04/30/architectural-patterns.html</link><pubDate>Mon, 30 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/04/30/architectural-patterns.html</guid><description>Just finished reading &amp;quot;Architectural Patterns&amp;quot;, last book of April. It covers a lot of Software Architecture-related patterns. Long read. pic.twitter.com/k0itAZuaED
&amp;mdash; Mario Carrion (@mariocarrion) April 30, 2018 Architectural Patterns is a long book written by Pethuru Raj, Anupama Raman and Harihara Subramanian. It was published by Packt in 2017 and it covers all kind of software patterns, from your well-known classic Software Design Patterns to the more general Enterprise Patterns, and includes as well some specific patterns applicable to SOA and Microservices.</description></item><item><title>GothamGo 2018</title><link>https://www.mariocarrion.com/2018/04/27/gotham-go-2018.html</link><pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/04/27/gotham-go-2018.html</guid><description>I had a great time last time I went to Gotham Go in 2016, I went two days, first day was the Advanced Workshop and second day was the conferences day; sadly I missed it last year, but this year I was surprised they changed the dates, they moved it from fall to spring which aligned correctly to my busy schedule. I was really looking forward to attending this year.</description></item><item><title>Finished Reading: Never Split the Difference</title><link>https://www.mariocarrion.com/2018/04/12/never-split-the-difference.html</link><pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/04/12/never-split-the-difference.html</guid><description>Just completed &amp;quot;Never Split the Difference&amp;quot; Good book, I should re-read it again at least once a year. üòå pic.twitter.com/HoFkrQm58R
&amp;mdash; Mario Carrion (@mariocarrion) April 12, 2018 Never Split the Difference: Negotiating As If Your Life Depended On It is a book published in 2016 by HarperBusiness and written by Chriss Voss, a former FBI hostage negotiator.
Never Split the Difference is an interesting book with a nice pacing, it includes a collection of well narrated stories that helps you understand how some concepts were discovered and how those allow you take the upper hand when negotiating.</description></item><item><title>Go Tip: Judging go-swagger with dredd</title><link>https://www.mariocarrion.com/2018/04/03/judge-go-swagger-with-dredd.html</link><pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/04/03/judge-go-swagger-with-dredd.html</guid><description>Using go-swagger it&amp;rsquo;s great for automatically generating Swagger 2.0 documentation for your API from annotations in your code. It even includes a validator to make sure the generated swagger.json is valid:
swagger validate swagger.json However there&amp;rsquo;s a tiny thing about this generated file, even if the swagger.json (or Blueprint) file is 100% valid it may not represent your real implementation, think of typos, broken responses, missing parameters or incorrect status codes.</description></item><item><title>Finished Reading: The TAO of Microservices</title><link>https://www.mariocarrion.com/2018/03/26/the-tao-of-microservices.html</link><pubDate>Mon, 26 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/03/26/the-tao-of-microservices.html</guid><description>Verschlimmbessern! (Quote from The Tao of Microservices) pic.twitter.com/5yId7FE9Tz
&amp;mdash; Mario Carrion (@mariocarrion) March 9, 2018 The TAO of Microservices is a relatively recent book written by Richard Rodger and published by Manning in December 2017. It takes a different approach than other books I read already about the same topic of Microservices because it focuses on a different paradigm: breaking down microservices based on their message interaction, which not surprisingly reminds me a lot of an AWS Product we are trying out.</description></item><item><title>Finished Reading: Building Evolutionary Architectures</title><link>https://www.mariocarrion.com/2018/03/01/building-evolutionary-architectures.html</link><pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/03/01/building-evolutionary-architectures.html</guid><description>Gift for me! ‚ÄúBuilding Evolutionary Architectures‚Äù üòå pic.twitter.com/PT88mTFkAp
&amp;mdash; Mario Carrion (@mariocarrion) December 29, 2017 Building Evolutionary Architectures is a book written by Neal Ford, Rebecca Parsons and Patrick Kua, it was published by O&amp;rsquo;Reilly in October 2017, it is a short and concise read. It somehow feels similar to Building Microservices, maybe because both books were written by ThoughtWorks employees.
Building Evolutionary Architectures introduces (not surprisingly because that&amp;rsquo;s the book&amp;rsquo;s title!</description></item><item><title>Go Tip: Embedding</title><link>https://www.mariocarrion.com/2018/02/16/go-tip-embedding.html</link><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/02/16/go-tip-embedding.html</guid><description>One of the cool features in Go is embedding; which we can compare it to class inheritance (if you want to compare it to something and you&amp;rsquo;re coming from a class-based programming language) but it is not the same.
Effective Go includes a nice brief introduction to this feature, I&amp;rsquo;m expanding that a bit.
Let&amp;rsquo;s say we have a hypothetical startup &amp;ldquo;Greetings Y&amp;rsquo;all&amp;rdquo; which is planning to disrupt the Greetings world!</description></item><item><title>Finished Reading: Designing Data Intensive Applications</title><link>https://www.mariocarrion.com/2018/02/13/designing-data-intensive-applications.html</link><pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/02/13/designing-data-intensive-applications.html</guid><description>Designing Data-Intensive Applications is a huge book! 500+ pages!
Just finished reading &amp;quot;Designing Data-Intensive Applications&amp;quot; @intensivedata Long read but great book, highly recommended. https://t.co/xMn6RtBonj
&amp;mdash; Mario Carrion (@mariocarrion) February 13, 2018 I don&amp;rsquo;t regret buying it at all but I do regret buying the physical version instead of the kindle version because it is heavy!
Designing Data-Intensive Applications comes with the following subtitle: The Big Ideas Behind Reliable, Scalable and Maintainable Systems which perfectly describes the content of this book, it is a combination of theory and practice with concrete software examples.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mario Carrion</title><link>https://www.mariocarrion.com/</link><description>Recent content on Mario Carrion</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 27 Dec 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.mariocarrion.com/index.xml" rel="self" type="application/rss+xml"/><item><title>nit: the opinionated Go linter</title><link>https://www.mariocarrion.com/2018/12/27/nit-the-opinionated-linter.html</link><pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/12/27/nit-the-opinionated-linter.html</guid><description>I&amp;rsquo;ve blogged in the past about the importance of having concrete rules and conventions when developing software, specially when a team is in charge of writing that said software. It becomes more problematic the larger the team is, it is not a big deal with smaller projects (which correlate to not having a lot of team members), but the bigger the team the more difficult it is to make sure everybody follows the same rules.</description></item><item><title>Finished Reading: Microservices Patterns</title><link>https://www.mariocarrion.com/2018/12/05/microservices-patterns.html</link><pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/12/05/microservices-patterns.html</guid><description>&amp;quot;Microservices Patterns&amp;quot; is a long read, well put together and really relevant to what&amp;#39;s trending. pic.twitter.com/AVtZK1OvlH
&amp;mdash; Mario Carrion (@mariocarrion) December 5, 2018 Microservices Patterns: with examples in Java is a book published by Manning in October 2018 and written by Chris Richardson.
Microservices Patterns is a long read, but worth the time investment, that covers practically everything you need to know to properly implement Microservices.
There&amp;rsquo;s a lot covered in the book that requires the reader to have some previous knowledge, I can see it being hard to follow without knowing some concepts in advance, and in the end it won&amp;rsquo;t be beneficial because you won&amp;rsquo;t be able to get the most out of the content.</description></item><item><title>Domain Driven Design and Go: Part 3, Domain Modeling</title><link>https://www.mariocarrion.com/2018/11/27/domain-driven-design-go-part-3.html</link><pubDate>Tue, 27 Nov 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/11/27/domain-driven-design-go-part-3.html</guid><description>Introduction We already implemented 3 of 8 rules, those three already model the main game rules, the &amp;ldquo;non-interactive&amp;rdquo; things: boards, cards and deck; what we need next are the &amp;ldquo;interactive&amp;rdquo; things: players and their actions. Specifically we must implement the following:
Given tablas are unique during the duration of the game, There are N players, each player is given one Tabla (Board), There&amp;rsquo;s a Cantor (Announcer), who is in charge of randomly selecting cards from the deck, Players have to listen to the announced cards and mark them on their boards, and The winner is determined by the first player who shouts &amp;ldquo;LOTER&amp;IACUTE;!</description></item><item><title>Domain Driven Design and Go: Part 2, Domain Modeling</title><link>https://www.mariocarrion.com/2018/11/13/domain-driven-design-go-part-2.html</link><pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/11/13/domain-driven-design-go-part-2.html</guid><description>Introduction Last time we talked about how awesome Loter&amp;iacute;a is and we defined the concrete rules of the game. What&amp;rsquo;s next is not a surprise: we are going to translate those rules. We will convert them into something the machine can understand.
Let&amp;rsquo;s go through each rule and &amp;ldquo;translate it&amp;rdquo; to technical terms.
There is a deck with 54 cards,
The deck is represented with an array of 54 Cards,</description></item><item><title>Domain Driven Design and Go: Loteria!</title><link>https://www.mariocarrion.com/2018/11/07/domain-driven-design-go-loteria.html</link><pubDate>Wed, 07 Nov 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/11/07/domain-driven-design-go-loteria.html</guid><description>Introduction Last weekend we went to the American Museum of Natural History to attend the D√≠a de Muertos festival. The program itself was awesome and overall it was a fantastic experience. What surprised me the most during this visit, and definitely my personal highlight, is that it made me remember a game I used to play when I was a kid called: Loter&amp;iacute;a.
El Borracho! #loter√≠a! pic.twitter.com/54NqWyBzDS
&amp;mdash; Mario Carrion (@mariocarrion) November 4, 2018 This made me recall yet another thing: the rules to play Loter&amp;iacute;a are pretty straightforward, it&amp;rsquo;s sort of like a &amp;ldquo;Mexican Bingo&amp;rdquo;.</description></item><item><title>Finished Reading: Microservices in Action</title><link>https://www.mariocarrion.com/2018/11/01/microservices-in-action.html</link><pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/11/01/microservices-in-action.html</guid><description>I just started reading &amp;quot;Microservices in Action&amp;quot; (MEAP), great content so far.
&amp;mdash; Mario Carrion (@mariocarrion) October 23, 2018 Microservices in Action is a book written by Morgan Bruce and Paulo A Pereira, published by Manning in October 2018.
Microservices in Action is from top to bottom the most complete Microservices-related book in the market right now. Its content and structure clearly differentiates from others books I&amp;rsquo;ve read in the past, it&amp;rsquo;s more concrete and explicit, it indicates what you will require for properly implementing Microservices in the real world, the problems you will face and more importantly it mentions concrete technologies that are, practically, applicable to any programming language or cloud provider.</description></item><item><title>Finished Reading: Get Programming with Go</title><link>https://www.mariocarrion.com/2018/10/29/get-programming-with-go.html</link><pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/10/29/get-programming-with-go.html</guid><description>Just got my copy of @programminggo üôåüèΩ pic.twitter.com/NKvoCncXmL
&amp;mdash; Mario Carrion (@mariocarrion) October 29, 2018 Get Programming with Go is a book written by Nathan Youngman and Roger Pepp√©, published by Manning in August 2018.
Full disclaimer: I did not finish reading Get Programming with Go today, instead I got my offical copy today! I was lucky enough to review this book when it was a MEAP back in March and not only that but I had the chance to talk to Nathan back at Gophercon this year.</description></item><item><title>Finished Reading: Algorithms to live by</title><link>https://www.mariocarrion.com/2018/10/18/algorithms-to-live-by.html</link><pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/10/18/algorithms-to-live-by.html</guid><description>Interesting quote from &amp;quot;Algorithms to live by&amp;quot;: our previous experiences dictate our future actions, also unreliable adults suck. pic.twitter.com/qE3oJe5A9X
&amp;mdash; Mario Carrion (@mariocarrion) October 3, 2018 Algorithms to live by is a book written by Brian Christian and Tom Griffiths, published by Picador in 2017.
Just finished reading &amp;quot;Algorithms to live by&amp;quot;. Funny thing: ~32% of the book is _Notes_ pic.twitter.com/3OH7Le0xBv
&amp;mdash; Mario Carrion (@mariocarrion) October 18, 2018 Algorithms to live by was a long but fascinating read, I specially liked the way Brian and Tom take existing well-known algorithms and use human problems to describe the solutions, it was amazing.</description></item><item><title>Finished Reading: A Philosophy of Software Design</title><link>https://www.mariocarrion.com/2018/09/19/a-philosophy-of-software-design.html</link><pubDate>Wed, 19 Sep 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/09/19/a-philosophy-of-software-design.html</guid><description>Just finished reading &amp;quot;A Philosophy of Software Design&amp;quot;. Concise book with good highlights. pic.twitter.com/dLP2K0HCRY
&amp;mdash; Mario Carrion (@mariocarrion) September 19, 2018 A Philosophy of Software Design, it&amp;rsquo;s a short academic book written by John Ousterhout and published by Standford University in 2018.
I discovered this book after a few people mentioned it on Twitter, it covers different facets related to Software Design, it is not a tutorial nor a really technical book, it is definitely a philosophical companion for your Software Design life.</description></item><item><title>Go Tip: Refactoring</title><link>https://www.mariocarrion.com/2018/09/12/go-tip-refactoring.html</link><pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/09/12/go-tip-refactoring.html</guid><description>Refactoring is one of those things you must continue doing regularly to maintain a clean codebase. It&amp;rsquo;s one of those unwritten Software Development rules.
Recently one of our projects required a little bit of refactoring, the goals we had in mind were not mind-blowing, they were a bit simple (yet complicated): rename some things. Basically move some packages, update the imports accordingly and rename some other types to different packages.</description></item><item><title>GopherCon 2018: Day 3 Conferences Day Two</title><link>https://www.mariocarrion.com/2018/08/29/gophercon-2018-day-3.html</link><pubDate>Wed, 29 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/08/29/gophercon-2018-day-3.html</guid><description>Welcome to the Second day of conferences at GopherCon 2018!
The day started with Writing Accessible Go by Julia Ferraioli, she covered a topic relevant to my professional experience: Accessibility. Obviously all the points she mentioned in her talk made a lot of sense from the Accessibility point of view, however what I found more interesting about this talk was how those points not only improve accessibility but also make the final code much more clearer and easier to understand, and how those recommendations are conventions in Go that are encouraged, like using short names for variables for example.</description></item><item><title>GopherCon 2018: Day 2 Conferences Day One</title><link>https://www.mariocarrion.com/2018/08/28/gophercon-2018-day-2.html</link><pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/08/28/gophercon-2018-day-2.html</guid><description>Today was the official first day of GopherCon. The conferences day to put it someway (but was my second one!). I arrived early because I assumed the breakfast lines will be similar to the ones we had yesterday for lunch, and considering it was only &amp;ldquo;half&amp;rdquo; the expected attendees I really wanted to make sure I avoided not having enough food.
After having breakfast, and before the first talk, I was able to explore the exhibitors booths, I got some really cool Gopher pins from the Microsoft booth:</description></item><item><title>GopherCon 2018: Days 0 and 1</title><link>https://www.mariocarrion.com/2018/08/27/gophercon-2018-day-1.html</link><pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/08/27/gophercon-2018-day-1.html</guid><description>Day 0 Next planned trip after San Francisco was Denver! To attend GopherCon for the first time ever!
It&amp;#39;s almost time to board! #GopherCon #GopherConDay0 pic.twitter.com/Tz6eMIu7wh
&amp;mdash; Mario Carrion (@mariocarrion) August 26, 2018 We took off early Sunday morning because I was attending the Architecture &amp;amp; Domain Modeling with Go kit workshop next day and because we wanted to explore a the city and the surroundings before kicking off everything GopherCon next morning.</description></item><item><title>Vacationing in San Francisco</title><link>https://www.mariocarrion.com/2018/08/22/vacationing-in-san-francisco.html</link><pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/08/22/vacationing-in-san-francisco.html</guid><description>I can&amp;rsquo;t recall exactly when was the last time I took a break longer than a few days. Either way I know for sure one thing: San Francisco marks the start of our long vacation! Interestingly enough we had planned this trip since last year for one special reason!
That special reason was for attending a wedding, we could not miss it: two good friends were getting married! It was a nice event that brought back nice memories when we went there five (or six?</description></item><item><title>Go Tip: Generating JSON Web Key Sets</title><link>https://www.mariocarrion.com/2018/08/06/go-generating-json-web-key-sets.html</link><pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.mariocarrion.com/2018/08/06/go-generating-json-web-key-sets.html</guid><description>Previously I blogged about using ActiveDirectory and JWT with Go, well this quick tip is somehow related to that post, it&amp;rsquo;s for generating JSON Web Key Sets that should help for creating a real valid JSON or for testing local-only values.
There&amp;rsquo;s a full example showing this in action, feel free to explore the repo.
This example uses the great go-jose package by Square, the final snippet code looks like this:</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mario Carrion</title><link>http://www.mariocarrion.com/index.xml</link><description>Recent content on Mario Carrion</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 31 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://www.mariocarrion.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Small(est) Docker Image for Go Programs</title><link>http://www.mariocarrion.com/2016/10/31/small-go-docker-image.html</link><pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/10/31/small-go-docker-image.html</guid><description>
&lt;p&gt;At work I&amp;rsquo;ve been focused recently on building more and more Go and Docker-related projects, all of them so far, follow the same pattern: use Docker Container to build a statically linked Go program &lt;strong&gt;AND&lt;/strong&gt; use Docker Container for running that said Go program.&lt;/p&gt;
&lt;p&gt;There a lot of articles related to creating small Docker images for &lt;a href=&#34;https://github.com/MarioCarrion/small-go-docker-skeleton/blob/master/main.go&#34;&gt;Go programs&lt;/a&gt;, I&amp;rsquo;ll share with you my minimal Dockerfiles (&lt;a href=&#34;https://github.com/MarioCarrion/small-go-docker-skeleton/blob/master/Dockerfile.build&#34;&gt;build&lt;/a&gt; and &lt;a href=&#34;https://github.com/MarioCarrion/small-go-docker-skeleton/blob/master/Dockerfile.static&#34;&gt;static&lt;/a&gt;), &lt;a href=&#34;https://github.com/MarioCarrion/small-go-docker-skeleton/blob/master/Makefile&#34;&gt;Makefile&lt;/a&gt; and a simple program that uses both the &lt;a href=&#34;https://github.com/joho/godotenv&#34;&gt;godotenv&lt;/a&gt; and requires SSL certificates, which seem to be the basic two requirements when building new Go Programs, there&amp;rsquo;s a &lt;a href=&#34;https://github.com/MarioCarrion/small-go-docker-skeleton&#34;&gt;fancy Github repo&lt;/a&gt; that includes the full example.&lt;/p&gt;
&lt;p&gt;Full disclaimer: this post is heavily inspired by &lt;a href=&#34;https://blog.codeship.com/building-minimal-docker-containers-for-go-applications/&#34;&gt;Codeship&amp;rsquo;s&lt;/a&gt; covering the same topic.&lt;/p&gt;
&lt;h2 id=&#34;go-program&#34;&gt;Go Program&lt;/h2&gt;
&lt;p&gt;It loads the &lt;code&gt;.env&lt;/code&gt; file from a volume: &lt;strong&gt;/app/.env&lt;/strong&gt; where it expects to have defined a variable called &lt;strong&gt;QUERY&lt;/strong&gt;, this has to be a properly formatted query string parameter.&lt;/p&gt;
&lt;h2 id=&#34;dockerfile-build&#34;&gt;Dockerfile.build&lt;/h2&gt;
&lt;p&gt;Defines the Dockerfile to be used for building the Go program, internally uses the Makefile to properly calling the right arguments to use to generate the binary.&lt;/p&gt;
&lt;h2 id=&#34;dockerfile-static&#34;&gt;Dockerfile.static&lt;/h2&gt;
&lt;p&gt;Defines the Dockerfile to be used for generating the final small Docker image, this will be final image to be used in production.&lt;/p&gt;
&lt;h2 id=&#34;makefile&#34;&gt;Makefile&lt;/h2&gt;
&lt;p&gt;It defines the rules for building the Go program running in the container, as well as the commands needed for building and running the actual Docker containers.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Obviously I&amp;rsquo;m missing other important things like the CI/CD rules for tests, running &lt;code&gt;go fmt&lt;/code&gt; and whatever else we need to run, but well, it&amp;rsquo;s easy to add. There&amp;rsquo;s also the &lt;a href=&#34;https://hub.docker.com/r/mariocarrion/small-go-docker-skeleton/&#34;&gt;Docker Hub&lt;/a&gt; for this repo, feel free to poke around.&lt;/p&gt;</description></item><item><title>Migrated: From Jekyll to Hugo</title><link>http://www.mariocarrion.com/2016/10/19/hugo-migration.html</link><pubDate>Wed, 19 Oct 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/10/19/hugo-migration.html</guid><description>
&lt;p&gt;If I recall correctly this is the fourth time migrating my blog to a different service or engine, I started using &lt;a href=&#34;https://en.wikipedia.org/wiki/Blogger_(service)&#34;&gt;Blogger&lt;/a&gt;, migrated to &lt;a href=&#34;https://en.wikipedia.org/wiki/WordPress&#34;&gt;Wordpress&lt;/a&gt;, then &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; and now &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The truth is that after migrating and building my blog for the first time with Hugo I was extremely surprised: &lt;strong&gt;it took less than 400ms&lt;/strong&gt;, with Jekyll? It takes more than 5 minutes! Sometimes even more specially when you start getting errors that prevent the build, not to mention that the automatic rebuild after resaving does not seem to work properly.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;My night so far: Mets get swept. Jekyll keeps throwing: &amp;quot;jekyll 2.4.0 | Error: Rate limit exceeded&amp;quot; &lt;a href=&#34;https://t.co/Qq7NcKKKTR&#34;&gt;pic.twitter.com/Qq7NcKKKTR&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/778790542452883456&#34;&gt;September 22, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;h2 id=&#34;how-was-it&#34;&gt;How was it?&lt;/h2&gt;
&lt;p&gt;Migrating to Hugo was pretty straightforward, I followed the official &lt;a href=&#34;https://gohugo.io/tutorials/migrate-from-jekyll/&#34;&gt;Migrate to Hugo from Jekyll&lt;/a&gt; guide, then I reworked my &lt;a href=&#34;https://github.com/swanson/lagom&#34;&gt;Lagom theme&lt;/a&gt; to implement it using &lt;a href=&#34;http://gohugo.io/templates/go-templates/&#34;&gt;Go&amp;rsquo;s template system&lt;/a&gt;. It took me about 3 weeknights to complete the whole migration. From that I learned the following:&lt;/p&gt;
&lt;h3 id=&#34;embedded-tweets&#34;&gt;Embedded tweets&lt;/h3&gt;
&lt;p&gt;In Jekyll I used the &lt;a href=&#34;https://github.com/rob-murray/jekyll-twitter-plugin&#34;&gt;jekyll-twitter-plugin&lt;/a&gt; to embed tweets, Hugo includes a &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34;&gt;shortcode&lt;/a&gt; called, surprisingly, &lt;strong&gt;tweet&lt;/strong&gt;. So stuff like this:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
{% twitter oembed https://twitter.com/mariocarrion/status/771469295431868416 %}
&lt;/pre&gt;
&lt;p&gt;becomes:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
{{&amp;lt; tweet 779294387348135936 &amp;gt;}}
&lt;/pre&gt;
&lt;h3 id=&#34;permalinks&#34;&gt;Permalinks&lt;/h3&gt;
&lt;p&gt;Permalinks are built by default using the following format:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
/2016/10/06/go-web-programming/index.html
&lt;/pre&gt;
&lt;p&gt;That does not work for me, because of the SEO, so I had to rename all the posts to the &lt;strong&gt;date+article-name.html&lt;/strong&gt; format, so those became:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
/2016/10/06/go-web-programming.html
&lt;/pre&gt;
&lt;h3 id=&#34;post-references&#34;&gt;Post references&lt;/h3&gt;
&lt;p&gt;In Jekyll links to your own posts on your blog use the following format:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
{% post_url 2016-09-16-first-sprint-with-go-and-docker %})
&lt;/pre&gt;
&lt;p&gt;In Hugo there are two shortcodes for generating links like that, either relative or absolute, so previous Jekyll links became something like the following:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
{{&amp;lt; relref &#34;2016-09-16-first-sprint-with-go-and-docker.markdown&#34; &amp;gt;}}
&lt;/pre&gt;
&lt;h3 id=&#34;syntax-highlighting&#34;&gt;Syntax Highlighting&lt;/h3&gt;
&lt;p&gt;Jekyll uses something like:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
{% highlight ruby %}
puts &#39;foo&#39;
{% endhighlight %}
&lt;/pre&gt;
&lt;p&gt;The migration script correctly migrated those tags above to the Hugo format, so everything became:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
{{&amp;lt; highlight ruby &amp;gt;}}
puts &#39;foo&#39;
{{&amp;lt; / highlight &amp;gt;}}
&lt;/pre&gt;
&lt;p&gt;However I didn&amp;rsquo;t have any syntax highlighting, fixing this issue was easy after reading &lt;a href=&#34;https://gohugo.io/extras/highlighting/&#34;&gt;the official guide&lt;/a&gt;; I was missing the &lt;strong&gt;pygmentize&lt;/strong&gt; command, installing &lt;a href=&#34;http://pygments.org/&#34;&gt;Pygments&lt;/a&gt; fixed the issue:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
easy_install Pygments
&lt;/pre&gt;
&lt;h2 id=&#34;archive-page&#34;&gt;Archive page&lt;/h2&gt;
&lt;p&gt;In Jekyll I built the &lt;a href=&#34;http://www.mariocarrion.com/archive.html&#34;&gt;Archive page&lt;/a&gt; using Liquid, in Hugo I had to rewrite everything &lt;a href=&#34;https://github.com/MarioCarrion/mariocarrion.github.com/blob/master/themes/lagom/layouts/shortcodes/archive_list.html&#34;&gt;using a shortcode&lt;/a&gt;, and then reference this shortcode from &lt;a href=&#34;https://github.com/MarioCarrion/mariocarrion.github.com/blob/master/content/pages/archive.markdown&#34;&gt;the page itself&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;html-and-css-minification&#34;&gt;HTML and CSS minification&lt;/h2&gt;
&lt;p&gt;Minification in Jekyll was handled through the &lt;a href=&#34;https://github.com/stereobooster/jekyll-press&#34;&gt;jekyll-press&lt;/a&gt;; Hugo does not support anything similar out of box, instead what is suggested is to use a external tool for doing so, one of the recommended options is &lt;a href=&#34;https://github.com/tdewolff/minify/tree/master/cmd/minify&#34;&gt;Minify&lt;/a&gt;. In the end I made a &lt;a href=&#34;https://github.com/MarioCarrion/mariocarrion.github.com/blob/master/Makefile&#34;&gt;Makefile&lt;/a&gt; that calls &lt;em&gt;Hugo&lt;/em&gt; and &lt;em&gt;minify&lt;/em&gt; to generate the final site, all is working really good.&lt;/p&gt;
&lt;h2 id=&#34;cleanup-program&#34;&gt;Cleanup program&lt;/h2&gt;
&lt;p&gt;In order to save myself some time and make sure there were no errors while replacing the old tags with the new tags (tweet tags, renaming the permalinks and cleaning up old fronmatter tags) I wrote a &lt;a href=&#34;https://github.com/MarioCarrion/jekyll-to-hugo&#34;&gt;Go program&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What I&amp;rsquo;m missing right now are the Open Graph and Twitter meta tags for properly displaying the content when sharing, I&amp;rsquo;ll be working on that next, for now everything builds faster and I could not be any happier.&lt;/p&gt;</description></item><item><title>Finished Reading: Making Big Data Work For your Business</title><link>http://www.mariocarrion.com/2016/10/13/making-big-data-work-for-your-business.html</link><pubDate>Thu, 13 Oct 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/10/13/making-big-data-work-for-your-business.html</guid><description>&lt;p&gt;Today I finished reading my 27th book of 2017, the title is &lt;a href=&#34;https://www.packtpub.com/business/making-big-data-work-your-business&#34;&gt;Making Big Data Work For Your Business&lt;/a&gt;, and similar to previous Packt books this one was also part of the &lt;a href=&#34;https://www.packtpub.com/packt/offers/free-learning&#34;&gt;Free Learning program&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;On that note, just finished reading the 27th book this year: &amp;quot;Making Big Data Work for Your Business&amp;quot; &lt;a href=&#34;https://t.co/Nh99gU0b7g&#34;&gt;pic.twitter.com/Nh99gU0b7g&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/786550275125411840&#34;&gt;October 13, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;Making Big Data Work For Your Business&lt;/strong&gt; is a long non technical book, that mentions some Big Data technologies here and there but nothing like Manning&amp;rsquo;s &lt;a href=&#34;https://www.manning.com/books/big-data&#34;&gt;Big Data&lt;/a&gt;. This book focuses more on what happens before the &lt;strong&gt;actual&lt;/strong&gt; &lt;em&gt;Big Data Project&lt;/em&gt;, the planning and justification of the project itself.&lt;/p&gt;
&lt;p&gt;The main goal of this book is to explain &lt;em&gt;Big Data&lt;/em&gt; to people in your organization, what could happen while and during the implementation of this project, the benefits and possible impacts after implementation, it also covers how to build a team for converting those plans into action as well as how to share those findings. Although I feel is aimed to Managers and Executives, I still believe a technical person could benefit from reading it.&lt;/p&gt;
&lt;p&gt;Beware, this a long business-like book, it could be tedious at times, so take your time when reading it.&lt;/p&gt;</description></item><item><title>Finished Reading: Go Web Programming</title><link>http://www.mariocarrion.com/2016/10/06/go-web-programming.html</link><pubDate>Thu, 06 Oct 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/10/06/go-web-programming.html</guid><description>&lt;p&gt;Just finished reading &lt;a href=&#34;https://www.manning.com/books/go-web-programming&#34;&gt;Go Web Programming&lt;/a&gt;, a book published by Manning Publications and written by &lt;a href=&#34;https://twitter.com/sausheong&#34;&gt;Sau Sheong Chang&lt;/a&gt;, this is the second (of three) Go MEAP books I bought. I got the hard copy a few months ago:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Got this bad boy today! &amp;quot;Go Web Programming&amp;quot; &lt;a href=&#34;https://t.co/uZLcLn10zH&#34;&gt;pic.twitter.com/uZLcLn10zH&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/752997378987270146&#34;&gt;July 12, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;This particular one was heavily used during my &lt;a href=&#34;http://www.mariocarrion.com/2016/09/16/first-sprint-with-go-and-docker.html&#34;&gt;two week sprint&lt;/a&gt; it solved a lot of the questions I had while working on the service I implemented, specially testing and handling multipart data.&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href=&#34;http://www.mariocarrion.com/2016/09/16/first-sprint-with-go-and-docker.html&#34;&gt;Go In Action&lt;/a&gt; this book is written in a way all chapters are laid out continuously so you can build upon what was learned before, it covers everything you can possibly need if you&amp;rsquo;re planning to build web services in Go, from handlers and forms to testing and deployment. It also covers a few extra Go packages that could be useful for building specific features or improving your testing.&lt;/p&gt;
&lt;p&gt;Really satisfied with &lt;strong&gt;Go Web Programming&lt;/strong&gt;, now I need to finish reading &lt;strong&gt;Go In Practice&lt;/strong&gt; to solidify what I&amp;rsquo;ve been reading and learning since last year.&lt;/p&gt;</description></item><item><title>SSL issue with Rubygems</title><link>http://www.mariocarrion.com/2016/10/05/ssl-errors.html</link><pubDate>Wed, 05 Oct 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/10/05/ssl-errors.html</guid><description>&lt;p&gt;I decided to update my working computer, in the morning today, wrong decision. After doing it I started getting the following errors after executing &lt;code&gt;bundle install&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
Fetching source index from https://rubygems.org/
Retrying fetcher due to error (2/4): Bundler::Fetcher::CertificateFailureError Could not verify the SSL certificate for https://rubygems.org/.
There is a chance you are experiencing a man-in-the-middle attack, but most likely your system doesn&#39;t have the CA certificates needed for verification. For information about OpenSSL certificates, see http://bit.ly/ruby-ssl. To connect without using SSL, edit your Gemfile sources and change &#39;https&#39; to &#39;http&#39;.
Retrying fetcher due to error (3/4): Bundler::Fetcher::CertificateFailureError Could not verify the SSL certificate for https://rubygems.org/.
There is a chance you are experiencing a man-in-the-middle attack, but most likely your system doesn&#39;t have the CA certificates needed for verification. For information about OpenSSL certificates, see http://bit.ly/ruby-ssl. To connect without using SSL, edit your Gemfile sources and change &#39;https&#39; to &#39;http&#39;.
Retrying fetcher due to error (4/4): Bundler::Fetcher::CertificateFailureError Could not verify the SSL certificate for https://rubygems.org/.
There is a chance you are experiencing a man-in-the-middle attack, but most likely your system doesn&#39;t have the CA certificates needed for verification. For information about OpenSSL certificates, see http://bit.ly/ruby-ssl. To connect without using SSL, edit your Gemfile sources and change &#39;https&#39; to &#39;http&#39;.
Could not verify the SSL certificate for https://rubygems.org/.
There is a chance you are experiencing a man-in-the-middle attack, but most likely your system doesn&#39;t have the CA
certificates needed for verification. For information about OpenSSL certificates, see http://bit.ly/ruby-ssl. To
connect without using SSL, edit your Gemfile sources and change &#39;https&#39; to &#39;http&#39;.
&lt;/pre&gt;
&lt;p&gt;Obviously this implied that everything related to rubygem was not working because &lt;code&gt;gem install bundler&lt;/code&gt; was also throwing:&lt;/p&gt;
&lt;pre class=&#34;black-pre&#34;&gt;
ERROR: Could not find a valid gem &#39;bundler&#39; (&gt;= 0), here is why:
Unable to download data from https://rubygems.org/ - SSL_connect returned=1 errno=0 state=error: certificate verify failed (https://api.rubygems.org/specs.4.8.gz)
&lt;/pre&gt;
&lt;p&gt;The SSL certificates on my work computer where obviously busted and because remote environments worked fine there was no blaming Rubygems this time. Google helped me find some possible answers:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Replace &lt;strong&gt;https&lt;/strong&gt; with &lt;strong&gt;http&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Manually download &lt;a href=&#34;https://gist.github.com/luislavena/f064211759ee0f806c88#manual-solution-to-ssl-issue&#34;&gt;the certificate&lt;/a&gt; and apply it&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;rvm osx-ssl-certs update all&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I didn&amp;rsquo;t even consider trying the first suggestion, obvious reasons; the second and third option did not work, so before going all nuclear I decided to try one last thing:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew install openssl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And that fixed the whole thing! It only took me about 40 minutes to fix, what a waste of time. Fixing this issue retaught me two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Do you have something important to do today? &lt;strong&gt;Do not&lt;/strong&gt; think about updating your computer.&lt;/li&gt;
&lt;li&gt;Dockerize all your world, at least the problems will be reduced to something in the container, not your computer; most of the times.&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Goals: October 2016</title><link>http://www.mariocarrion.com/2016/10/01/october-goals.html</link><pubDate>Sat, 01 Oct 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/10/01/october-goals.html</guid><description>
&lt;p&gt;Three more months before reaching 2017! What a ride. Let&amp;rsquo;s see what I planned to accomplish in &lt;a href=&#34;http://www.mariocarrion.com/2016/09/01/_sept-2016.html&#34;&gt;September&lt;/a&gt;:&lt;/p&gt;
&lt;h3 id=&#34;read-at-least-two-books&#34;&gt;Read &lt;em&gt;at least&lt;/em&gt; two books&lt;/h3&gt;
&lt;p&gt;I did accomplish this, I finished reading &lt;a href=&#34;http://www.mariocarrion.com/2016/09/19/docker-in-practice.html&#34;&gt;Docker In Practice&lt;/a&gt; and &lt;a href=&#34;http://www.mariocarrion.com/2016/09/23/orchestrating-docker.html&#34;&gt;Orchestrating Docker&lt;/a&gt;; I&amp;rsquo;m still working on finishing reading &lt;em&gt;Go Web Programming&lt;/em&gt;, I got totally sidetracked studying for &lt;a href=&#34;http://www.mariocarrion.com/2016/09/30/last-two-weeks.html&#34;&gt;my test&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;hack-more-dynamic-docker-composer&#34;&gt;Hack more Dynamic Docker Composer&lt;/h3&gt;
&lt;p&gt;Failed this one, I didn&amp;rsquo;t spend time working on &lt;em&gt;DDC&lt;/em&gt;; this month I will go back, I have to.&lt;/p&gt;
&lt;h3 id=&#34;what-am-i-planning-for-october&#34;&gt;What am I planning for October?&lt;/h3&gt;
&lt;p&gt;Finish reading the &lt;em&gt;Go Web Programming&lt;/em&gt; book, as well as &lt;em&gt;Go in Practice&lt;/em&gt; and &lt;em&gt;Go Programming Blueprints&lt;/em&gt;, hack more &lt;em&gt;Dynamic Docker Composer&lt;/em&gt; and push my blogging even more, I will try to publish a post once a week, talking about what I did that week, I hope I can.&lt;/p&gt;</description></item><item><title>What I learned from the past two weeks</title><link>http://www.mariocarrion.com/2016/09/30/last-two-weeks.html</link><pubDate>Fri, 30 Sep 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/09/30/last-two-weeks.html</guid><description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Well that test result wasn&amp;#39;t what I expected &lt;a href=&#34;https://t.co/FXF7x4LhnS&#34;&gt;pic.twitter.com/FXF7x4LhnS&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/782002250826874881&#34;&gt;September 30, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;Tonight I failed a test I wanted to pass really bad. It sucks to not being able to accomplish something you want to do, but you have to understand that if something happens is for a reason. This time the reason was that I did not prepare myself good enough.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;That time of the day when you have to review all the things you learned in college, once more time. &lt;a href=&#34;https://t.co/oASdIFM3Uy&#34;&gt;pic.twitter.com/oASdIFM3Uy&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/778443287417856000&#34;&gt;September 21, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;Last two weeks have been a phenomenal learning experience. For the first time in a while I was exhausted because I wanted to be, not because I had to. It was draining and hard, but I liked the feeling of pushing myself towards completing a concrete goal. I spent about 10 nights, more or less, staying up late until midnight, reading and solving exercises, just getting ready, practicing things I learned back in college but I haven&amp;rsquo;t used in years.&lt;/p&gt;
&lt;p&gt;Still it was not enough.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I&amp;#39;m reading a new book and it feels like the time I was learning Visual C++ in high school. &lt;a href=&#34;https://t.co/HqIbzhDeVs&#34;&gt;pic.twitter.com/HqIbzhDeVs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/778225333778673664&#34;&gt;September 20, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;Tonight on my way home, I recalled a thing a coworker mentioned to me during my first job, he is a married man with two children, and although the context of what he told me was related to &lt;em&gt;being in shape&lt;/em&gt;; the same idea applies here: &lt;em&gt;&amp;ldquo;The older you get, the more difficult it becomes to accomplish new things&amp;rdquo;&lt;/em&gt;. Yes it is true, things are more difficult but not impossible.&lt;/p&gt;
&lt;p&gt;The truth is that the whole experience was eye opening, not only it takes me longer to prepare myself for stuff like this, but because of the limited free time I have I must use all of it wisely.&lt;/p&gt;
&lt;p&gt;In the end the takeaway from all of this is: Study. Practice. Prepare. Repeat.&lt;/p&gt;</description></item><item><title>Finished Reading: Orchestrating Docker</title><link>http://www.mariocarrion.com/2016/09/23/orchestrating-docker.html</link><pubDate>Fri, 23 Sep 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/09/23/orchestrating-docker.html</guid><description>&lt;p&gt;Following the Docker theme of the month, I finished reading this one today. I got &lt;a href=&#34;https://www.packtpub.com/virtualization-and-cloud/orchestrating-docker&#34;&gt;Orchestrating Docker&lt;/a&gt; for free as part of the &lt;a href=&#34;https://www.packtpub.com/packt/offers/free-learning&#34;&gt;Free Forever Learning&lt;/a&gt; initiative by Packtpub, basically you could get a free book every day, you just have to claim it.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&amp;quot;Orchestrating Docker&amp;quot; 24th of the year. Super short book. &lt;a href=&#34;https://t.co/CRSyskgXUY&#34;&gt;pic.twitter.com/CRSyskgXUY&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/779294387348135936&#34;&gt;September 23, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;Having read the Docker Manning books before this one really raised the bar for me, this book does includes some interesting things to consider like introducing &lt;a href=&#34;https://coreos.com/etcd/docs/latest/docker_guide.html&#34;&gt;etcd&lt;/a&gt; and the explicit concept of &lt;a href=&#34;https://docs.docker.com/engine/admin/ambassador_pattern_linking/&#34;&gt;ambassador containers&lt;/a&gt; but that&amp;rsquo;s pretty much it.&lt;/p&gt;
&lt;p&gt;The good thing is that I didn&amp;rsquo;t have to spend too much time reading it, it&amp;rsquo;s a quick read.&lt;/p&gt;</description></item><item><title>Finished Reading: Docker in Practice</title><link>http://www.mariocarrion.com/2016/09/19/docker-in-practice.html</link><pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/09/19/docker-in-practice.html</guid><description>&lt;p&gt;Another Docker book from Manning has been completed, this time my first ever &lt;em&gt;In Practice&lt;/em&gt; book, which is basically a collection of tip, tricks, best practices and common solutions to be used on a daily basis. The &lt;em&gt;In Practice&lt;/em&gt; series are similar to O&amp;rsquo;Reilly&amp;rsquo;s &lt;em&gt;Cookbook&lt;/em&gt; ones, both follow the same pattern: present a problem, show the solution, group those problems and solutions by a similar theme, profit.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&amp;quot;Docker in Practice&amp;quot; 23rd of the year. Long and worth read. &lt;a href=&#34;https://t.co/DZcXl7Lg7x&#34;&gt;pic.twitter.com/DZcXl7Lg7x&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/777838798826799104&#34;&gt;September 19, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;I personally found this book really useful, it complements all other Docker books I&amp;rsquo;ve read so far, it includes examples that really distinguish the author from other ones, because those examples are &lt;em&gt;battle tested&lt;/em&gt; and in some cases it introduces some new Docker-related projects that complemented the ecosystem.&lt;/p&gt;
&lt;p&gt;I take a lot from this book, from basic knowledge:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;docker commit&lt;/em&gt;, &lt;em&gt;docker exec&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Signals sent from docker to the (&lt;em&gt;kill&lt;/em&gt; uses &lt;em&gt;KILL&lt;/em&gt;, &lt;em&gt;stop&lt;/em&gt; uses &lt;em&gt;SIGTERM&lt;/em&gt;, for example)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to tips for building proper images:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Specifying package versions&lt;/li&gt;
&lt;li&gt;Flattening images&lt;/li&gt;
&lt;li&gt;Package Caching&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and tips for production&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zero downtime switchover&lt;/li&gt;
&lt;li&gt;Monitoring&lt;/li&gt;
&lt;li&gt;Debugging&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the end I really believe this book together with &lt;a href=&#34;http://www.mariocarrion.com/2016/09/01/docker-in-action.html&#34;&gt;Docker in Action&lt;/a&gt; are a must and they &lt;strong&gt;should&lt;/strong&gt; be read one after the other to get better results. The only concern I can see with this book is that it will become obsolete really fast (recall Docker keeps changing and new projects keeps popping up), so right now (&lt;strong&gt;2016&lt;/strong&gt;) is still a good time to read it, later? who knows.&lt;/p&gt;</description></item><item><title>First Sprint with Go and Docker</title><link>http://www.mariocarrion.com/2016/09/16/first-sprint-with-go-and-docker.html</link><pubDate>Fri, 16 Sep 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/09/16/first-sprint-with-go-and-docker.html</guid><description>&lt;p&gt;In my previous &lt;a href=&#34;http://www.mariocarrion.com/2016/09/01/_sept-2016.html&#34;&gt;September 2016 Goals&lt;/a&gt; post I mentioned that I finally had the chance to start working professionally with Go and Docker, well, how did it &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;The truth is that just like with any other new thing you start learning, it takes time to get used to and there&amp;rsquo;s a learning curve. It&amp;rsquo;s frustrating and encouraging at the same time because you have the solution in your head but putting it in &lt;em&gt;words&lt;/em&gt; it&amp;rsquo;s more difficult. The best analogy I can think of this experience would be ordering food in a foreign country where the language you speak is not spoken by the locals. Simple as that. You&amp;rsquo;re hungry, you know what you want to eat but you can&amp;rsquo;t express it in proper words, you need to use your hands, maybe draw a couple of things, ask for help, etcetera, etcetera, and all of that takes time.&lt;/p&gt;
&lt;p&gt;Well, that&amp;rsquo;s how it went.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preparing my Dockerfiles for statically building a go binary was easy, until I started having issues with &lt;a href=&#34;https://github.com/gographics/imagick&#34;&gt;imagick&lt;/a&gt;, which so far I haven&amp;rsquo;t been able to figure out.&lt;/li&gt;
&lt;li&gt;Making sure everything was 100% covered, again took me some time, not because the packages &lt;a href=&#34;https://golang.org/pkg/testing/&#34;&gt;testing&lt;/a&gt; and &lt;a href=&#34;https://golang.org/pkg/net/http/httptest/&#34;&gt;net/http/httptest&lt;/a&gt; are difficult to use but more because I had to properly write the code in a way it allowed &lt;a href=&#34;https://tour.golang.org/methods/4&#34;&gt;interfaces&lt;/a&gt; so I could mock the things I needed to to properly test everything.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the end, this new project is still a work in progress and it is not ready for production, I believe I will need at least another sprint to finally have it ready, and the truth is that I haven&amp;rsquo;t had enough time to consider the production-specific problems, like deployment, monitoring, logging and whatnot.&lt;/p&gt;
&lt;p&gt;In all honesty I&amp;rsquo;m enjoying programming, &lt;strong&gt;a lot&lt;/strong&gt;, in Go and using Docker is a &lt;strong&gt;delight&lt;/strong&gt;. I know everything is taking longer than expected, but that&amp;rsquo;s the way it is when building and using something new. However I know one thing for sure: this sprint is going be much more amazing.&lt;/p&gt;</description></item><item><title>Finished Reading: Docker in Action</title><link>http://www.mariocarrion.com/2016/09/01/docker-in-action.html</link><pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/09/01/docker-in-action.html</guid><description>&lt;p&gt;Just like a mentioned in my &lt;a href=&#34;http://www.mariocarrion.com/2016/09/01/_sept-2016.html&#34;&gt;previous blog&lt;/a&gt; post, I finished reading &lt;a href=&#34;https://www.manning.com/books/docker-in-action&#34;&gt;Docker in Action&lt;/a&gt; today and what a phenomenal book! Actually I believe Manning Publications hand picks their authors because, so far, I always find them well written and with valuable information.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;22nd of the year! &amp;quot;Docker In Action&amp;quot;, fantastic book! &lt;a href=&#34;https://t.co/JXaveLPfFc&#34;&gt;pic.twitter.com/JXaveLPfFc&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/771469295431868416&#34;&gt;September 1, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;I&amp;rsquo;m a huge fan of Docker, I liked the concept from the first time I read about it and I&amp;rsquo;ve been educating myself and using it for about 1 year already. This is the second book I read about Docker, first one was &lt;a href=&#34;http://smile.amazon.com/gp/product/B00ZGRS4XM&#34;&gt;Docker: Up &amp;amp; Running&lt;/a&gt;, and the truth is that &lt;em&gt;Docker in Action&lt;/em&gt; is superior to the O&amp;rsquo;Reilly one.&lt;/p&gt;
&lt;p&gt;The pace of the book is wonderful, the examples are clear and simple, not too complicated; if I had to complain about something it would be the last chapter, I felt it needed a little bit more, but still a good book overall. Kudos to the &lt;a href=&#34;http://allingeek.com/&#34;&gt;Jeff Nickoloff&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Goals: September 2016</title><link>http://www.mariocarrion.com/2016/09/01/_sept-2016.html</link><pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/09/01/_sept-2016.html</guid><description>
&lt;p&gt;Summer is, sort of, officially finished. Today we start the ninth month of the year. In three months from now 2016 will be no more. Time does fly really fast.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Three more months and this year will no longer be. Time flies.&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/771407620838133760&#34;&gt;September 1, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;Let&amp;rsquo;s go back and take a look at what I planned:&lt;/p&gt;
&lt;h3 id=&#34;complete-reading-go-web-programming&#34;&gt;Complete reading &amp;ldquo;Go Web Programming&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;The truth is that I got sidetracked reading &lt;a href=&#34;https://www.manning.com/books/docker-in-action&#34;&gt;Docker in Action&lt;/a&gt;, which actually I finished reading today, great book by the way, I do plan finish reading &lt;strong&gt;Go Web Programming&lt;/strong&gt; this month, that&amp;rsquo;s for sure!&lt;/p&gt;
&lt;h3 id=&#34;complete-reading-go-in-action&#34;&gt;Complete reading &amp;ldquo;Go in Action&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;As I mentioned during the &lt;a href=&#34;http://www.mariocarrion.com/2016/08/01/august-goals.html&#34;&gt;August post&lt;/a&gt;, I was super close to finish reading it, and of course &lt;a href=&#34;http://www.mariocarrion.com/2016/07/15/go-in-action.html&#34;&gt;I did&lt;/a&gt;. Surprisingly last month I had two Go-related good news. First I got the &lt;a href=&#34;https://www.manning.com/books/go-in-practice&#34;&gt;Go in Practice&lt;/a&gt; book in the mail:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Got this bad boy today! &amp;quot;Go in Practice&amp;quot; &lt;a href=&#34;https://twitter.com/hashtag/golang?src=hash&#34;&gt;#golang&lt;/a&gt; &lt;a href=&#34;https://t.co/ZxKIOgX6Rg&#34;&gt;pic.twitter.com/ZxKIOgX6Rg&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mario Carrion (@mariocarrion) &lt;a href=&#34;https://twitter.com/mariocarrion/status/768618956080844801&#34;&gt;August 25, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;Making it my fifth physical Go book, and third one published by Manning; the second good news is that I finally have a job project using Go, &lt;strong&gt;finally!&lt;/strong&gt;, so that&amp;rsquo;s phenomenal news for me.&lt;/p&gt;
&lt;h3 id=&#34;complete-reading-amazon-web-services-in-action&#34;&gt;Complete reading &amp;ldquo;Amazon Web Services in Action&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;This &lt;a href=&#34;http://www.mariocarrion.com/2016/08/02/amazon-web-services-in-action.html&#34;&gt;was also completed&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;have-dynamic-docker-composer-ready&#34;&gt;Have Dynamic Docker Composer &amp;ldquo;ready&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;Obviously a really aggressive goal but I did manage to push some code &lt;a href=&#34;https://github.com/MarioCarrion/dynamic-docker-composer&#34;&gt;to github&lt;/a&gt;, I had the chance to think about the overall architecture and I progressed a little bit, not as much as I expected but still something, this month is all about keeping the ball rolling.&lt;/p&gt;
&lt;h3 id=&#34;what-am-i-planning-for-september&#34;&gt;What am I planning for September?&lt;/h3&gt;
&lt;p&gt;Again read at least two books, Docker in Action does not count, and hack more Dynamic Docker Composer, hopefully I can integrate it with Gitlab and blog about it.&lt;/p&gt;
&lt;p&gt;Only time will tell.&lt;/p&gt;</description></item><item><title>Git Workflow: Commit Message Conventions</title><link>http://www.mariocarrion.com/2016/08/30/git-commit-message.html</link><pubDate>Tue, 30 Aug 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/08/30/git-commit-message.html</guid><description>
&lt;p&gt;Previous Tip: &lt;a href=&#34;http://www.mariocarrion.com/2016/08/24/git-workflow.html&#34;&gt;Branches naming conventions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Continuing the Git series, in this post I&amp;rsquo;ll cover the most common thing we all do when using git, but some people have a hard time doing it: &lt;strong&gt;Commit Messages&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;why-is-important-to-write-a-good-commit-message&#34;&gt;Why is important to write a good commit message?&lt;/h3&gt;
&lt;p&gt;Simple: we are humans and, even when the code is self-documented and well written, we need a digital trail to the original requirements. Having the &lt;em&gt;humanized&lt;/em&gt; reason stored in the git history itself is extremely useful when trying to understand why some code was implemented in a particular way.&lt;/p&gt;
&lt;h3 id=&#34;what-should-not-the-commit-message-include&#34;&gt;What should not the commit message include?&lt;/h3&gt;
&lt;p&gt;Nonsense, in other words avoid meaningless commit messages, for example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Update&lt;/p&gt;
&lt;p&gt;save&lt;/p&gt;
&lt;p&gt;commitment&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By the way, those commit messages above are real, taken from some projects I previously had the honor to work on; all of them have a single thing in common, they do not explain why the change was made, they just indicate something was changed and the message was added because git required it.&lt;/p&gt;
&lt;h3 id=&#34;what-should-the-commit-message-include&#34;&gt;What should the commit message include?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;All&lt;/strong&gt; commit messages must include:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A bug tracking system reference, in other words a ticket number.&lt;/li&gt;
&lt;li&gt;When applicable, detailed information regarding the change itself: &amp;ldquo;This file was moved here because x, y and z&amp;rdquo;, &amp;ldquo;library was upgraded because of xyz&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Few exceptions to this rule are for example: changes fixing typos or documentation improvements.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s important to write useful commit messages because one day you will have to deal with the following yourself:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why was this changed? Did I change it? Why!!??&lt;/p&gt;
&lt;p&gt;Well, let&amp;rsquo;s &lt;code&gt;git blame&lt;/code&gt;, take a look at the commit message and the ticket included, that should explain something.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;what-format-should-you-use-when-writing-commit-messages&#34;&gt;What format should you use when writing commit messages?&lt;/h3&gt;
&lt;p&gt;The format my team and I have found useful is the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(Ticket Number) (Commit message)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example, for a ticket &lt;strong&gt;#1789&lt;/strong&gt; with a subject &amp;ldquo;&lt;em&gt;Application throws null reference error when input field is empty&lt;/em&gt;&amp;rdquo;, a good commit message would be:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#35;1789 Sanitize input field to avoid raising exception&lt;/p&gt;
&lt;p&gt;This commits adds a new method to sanitize the data, the&lt;/p&gt;
&lt;p&gt;method is triggered &lt;code&gt;before_save&lt;/code&gt; to remove invalid characters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It&amp;rsquo;s important to keep all lines in the commit message short, specially the first one, because that&amp;rsquo;s the one available from the &lt;code&gt;git log --pretty=oneline&lt;/code&gt; and commonly used by most web UIs, like Github and Gitlab.&lt;/p&gt;
&lt;p&gt;You can configure your editor to automatically break the line when exceeding certain length, vim does that for you for example.&lt;/p&gt;
&lt;p&gt;Make your team and yourself a favor, write concise and useful commit messages, I assure you it will help you in the future.&lt;/p&gt;</description></item><item><title>Git Workflow: Branches naming conventions</title><link>http://www.mariocarrion.com/2016/08/24/git-workflow.html</link><pubDate>Wed, 24 Aug 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/08/24/git-workflow.html</guid><description>
&lt;p&gt;This blog post kicks off a series related to &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;, what I consider to be some of the best practices when using git on the daily basis, the tips and tricks I know for sure have impacted my team and our daily workflows when working on new features, fixing bugs and reviewing code.&lt;/p&gt;
&lt;p&gt;Some of the tips and tricks are really simple and nothing more than common sense, some others require a little bit of Git knowledge, in all cases I will be providing examples for a better understanding and the rationale behind the tip or trick.&lt;/p&gt;
&lt;p&gt;Please be aware, we follow the &lt;a href=&#34;https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow&#34;&gt;feature branch workflow&lt;/a&gt;, so all the tips are based on that workflow.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s get this thing started.&lt;/p&gt;
&lt;h2 id=&#34;branch-naming-conventions&#34;&gt;Branch naming conventions&lt;/h2&gt;
&lt;p&gt;Naming the branch is the first thing to do when working on any new change. The new branch will follow this pattern:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[fix|feature|chore]/[author]-[ticket-number]-[short-humanized-description]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fix/mario-TKT_3333-world-is-falling-apart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chore/mario-TKT_2222-fix-typo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feature/mario-TKT_1111-crud-v2-implementation&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Naming the branches this way give us the following three benefits:&lt;/p&gt;
&lt;h3 id=&#34;humanized-names-are-simpler-to-understand&#34;&gt;Humanized names are simpler to understand&lt;/h3&gt;
&lt;p&gt;Having the &lt;em&gt;ticket type&lt;/em&gt; in the branch name itself is always useful, because obviously you can tell from a &lt;strong&gt;chore&lt;/strong&gt; and a &lt;strong&gt;fix&lt;/strong&gt;, specially useful when managers or team leads want to see what new fixes are being implemented, doing a simple as:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git branch -r | grep &amp;quot;fix/&amp;quot; | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;personalized-names&#34;&gt;Personalized names&lt;/h3&gt;
&lt;p&gt;If for whatever reason a ticket in particular has to be divided and there&amp;rsquo;s no way to create multiple subtickets for each specific change, then multiple developers can work on their own personal feature branches and still reference the same ticket number.&lt;/p&gt;
&lt;p&gt;Ideally, in the perfect world, no developer should be using the same ticket number, so for example branches like these should never be happening:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fix/mario-TKT_3333-crud-not-working&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fix/ruby-TKT_3333-missing-fkey&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;selective-builds&#34;&gt;Selective builds&lt;/h3&gt;
&lt;p&gt;When using a CI, like Gitlab-CI, Jenkins or Travis. You can selectively build the branches that match certain patterns, let&amp;rsquo;s say only those beginning with &lt;strong&gt;fix&lt;/strong&gt; or &lt;strong&gt;feature&lt;/strong&gt;. The idea is to save some precious computing time for all other branches that really require CI.&lt;/p&gt;
&lt;p&gt;For example using &lt;a href=&#34;http://docs.gitlab.com/ce/ci/yaml/README.html#only-and-except&#34;&gt;Gitlab-CI&lt;/a&gt; you can define a regex value to be used &lt;strong&gt;only&lt;/strong&gt; building only those branches, &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin&#34;&gt;Jenkins&amp;rsquo; Git plugin&lt;/a&gt; has something similar and so does &lt;a href=&#34;https://docs.travis-ci.com/user/customizing-the-build#Building-Specific-Branches&#34;&gt;Travis&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Tip: Materialized Views: modifying columns with Scenic</title><link>http://www.mariocarrion.com/2016/08/10/changing-a-materialized-view.html</link><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid>http://www.mariocarrion.com/2016/08/10/changing-a-materialized-view.html</guid><description>&lt;p&gt;Back in February I wrote about &lt;a href=&#34;http://www.mariocarrion.com/2016/02/26/sharing-models-between-projects.html&#34;&gt;Sharing ActiveRecord models between different projects using ActiveRecord&lt;/a&gt; by using a combination of Rails and &lt;a href=&#34;https://github.com/thoughtbot/scenic&#34;&gt;Scenic&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Well, what happens when you need to change the column type of one of the tables used by a Materialized View. How do you do that? Using the &lt;a href=&#34;https://github.com/MarioCarrion/share-activerecord-models&#34;&gt;example I already have on github&lt;/a&gt;, and assuming you want to change &lt;strong&gt;products.name&lt;/strong&gt; from &lt;code&gt;string&lt;/code&gt; to &lt;code&gt;text&lt;/code&gt;, you would need generate a migration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;rails&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;g&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;migration&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;change_products_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the following content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;ChangeProductsName&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;ActiveRecord&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;Migration&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;up&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;drop_view&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:expensive_products&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;materialized&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;change_column&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:products&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:text&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;create_view&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:expensive_products&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;materialized&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;# If we had more versions for this materialized we would use the latest&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;# generated instruction, something like:&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;# update_view :expensive_products, version: 2, revert_to_version: 1, materialized: true&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;add_index&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:expensive_products&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;unique&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;down&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;drop_view&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:expensive_products&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;materialized&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;change_column&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:products&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:string&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;create_view&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:expensive_products&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;materialized&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;# Similar to &amp;quot;#up&amp;quot; we would do the same:&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;# update_view :expensive_products, version: 2, revert_to_version: 1, materialized: true&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;add_index&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:expensive_products&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;:id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;unique&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What is important to take from the code in this migration is how we make the change to update the table and then, after that, we create or update the materialized view, depending on how many versions we already have.&lt;/p&gt;
&lt;p&gt;The important question about all of this is: &lt;em&gt;Is this the &lt;strong&gt;right way&lt;/strong&gt; to do it?&lt;/em&gt; This is definitely the way to do it if you don&amp;rsquo;t really have live traffic, or you don&amp;rsquo;t mind getting errors while the database is making the changes.&lt;/p&gt;
&lt;p&gt;When your system has a lot of traffic you need to be careful and treat your clients with respect, to me the best way to handle a change like this is by doing the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a single migration to add a new column with the right type you want to use to the table.&lt;/li&gt;
&lt;li&gt;Create a &lt;em&gt;dumpster&lt;/em&gt; rake task, to copy the data from the old column to the new one.&lt;/li&gt;
&lt;li&gt;Update your views, if any, to use this new column.&lt;/li&gt;
&lt;li&gt;Create a new materialized view, that uses this new column instead of the other one.&lt;/li&gt;
&lt;li&gt;Update your model and &lt;a href=&#34;http://api.rubyonrails.org/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_name&#34;&gt;self.table_name&lt;/a&gt; to this new materialized view.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Make a release&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Create a migration similar to the above, making the changes you want.&lt;/li&gt;
&lt;li&gt;Again, create a &lt;em&gt;dumpster&lt;/em&gt; rake task, in this case copy the data from new column to the old one.&lt;/li&gt;
&lt;li&gt;Again, update your views, if any, to use the old column.&lt;/li&gt;
&lt;li&gt;Again, update your model to use the old &lt;em&gt;self.table_name&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Make a release&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I know all the steps above seem like overkill, but the truth is that if you&amp;rsquo;re trying to keep your system 100% uptime, with practically zero amount of errors and number of user complaints, that&amp;rsquo;s the only way to do it, basically:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create an intermediary&lt;/li&gt;
&lt;li&gt;Migrate&lt;/li&gt;
&lt;li&gt;Revert&lt;/li&gt;
&lt;/ol&gt;</description></item></channel></rss>